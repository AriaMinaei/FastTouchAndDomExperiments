require('../../../prepare');

spec(['graphics/lightmatrix/rotation', 'graphics/lightmatrix/scale', 'graphics/lightmatrix/base'], function(Rotation, Scale, Base) {
  Base.toCss(Rotation.matrix(1, 0, 0)).should.equal("matrix3d(1, 0, 0, 0, 0, 0.5403023058681398, 0.8414709848078965, 0, 0, -0.8414709848078965, 0.5403023058681398, 0, 0, 0, 0, 1)");
  Base.toCss(Rotation.matrix(0, 1, 0)).should.equal("matrix3d(0.5403023058681398, 0, -0.8414709848078965, 0, 0, 1, 0, 0, 0.8414709848078965, 0, 0.5403023058681398, 0, 0, 0, 0, 1)");
  Base.toCss(Rotation.matrix(0, 0, 1)).should.equal(Base.toCss(Base.fromCss("matrix(0.5403023058681398, 0.8414709848078965, -0.8414709848078965, 0.5403023058681398, 0, 0)")));
  Base.toCss(Rotation.matrix(1, 2, 0)).should.equal("matrix3d(-0.4161468365471424, 0.7651474012342926, -0.49129549643388193, 0, 0, 0.5403023058681398, 0.8414709848078965, 0, 0.9092974268256817, 0.35017548837401463, -0.2248450953661529, 0, 0, 0, 0, 1)");
  Base.toCss(Rotation.matrix(1, 2, 3)).should.equal("matrix3d(0.411982245665683, -0.6812427202564033, 0.6051272472413688, 0, 0.05872664492762098, -0.642872836134547, -0.7637183366502791, 0, 0.9092974268256817, 0.35017548837401463, -0.2248450953661529, 0, 0, 0, 0, 1)");
  return Base.toCss(Rotation.applyTo(Base.identity(), 1, 2, 3)).should.equal("matrix3d(0.411982245665683, -0.6812427202564033, 0.6051272472413688, 0, 0.05872664492762098, -0.642872836134547, -0.7637183366502791, 0, 0.9092974268256817, 0.35017548837401463, -0.2248450953661529, 0, 0, 0, 0, 1)");
});

/*
//@ sourceMappingURL=rotation.map
*/
